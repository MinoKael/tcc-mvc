// <auto-generated />
using MeuTccMvc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MeuTccMvc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251004020558_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeuTccMvc.Models.MediaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Genre")
                        .HasColumnType("text");

                    b.Property<int>("MediaType")
                        .HasColumnType("integer");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("integer");

                    b.Property<string>("Sinopse")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("MediaItems");

                    b.HasDiscriminator().HasValue("MediaItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MeuTccMvc.Models.Book", b =>
                {
                    b.HasBaseType("MeuTccMvc.Models.MediaItem");

                    b.Property<string>("Author")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ISBN")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Publisher")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasDiscriminator().HasValue("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Fantasia",
                            MediaType = 1,
                            ReleaseYear = 1954,
                            Sinopse = "Um jovem hobbit herda um anel mágico e perigoso...",
                            Title = "O Senhor dos Anéis: A Sociedade do Anel",
                            Author = "J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Ficção Científica",
                            MediaType = 1,
                            ReleaseYear = 1965,
                            Sinopse = "A jornada de um jovem nobre em um planeta desértico...",
                            Title = "Duna",
                            Author = "Frank Herbert"
                        });
                });

            modelBuilder.Entity("MeuTccMvc.Models.Movie", b =>
                {
                    b.HasBaseType("MeuTccMvc.Models.MediaItem");

                    b.Property<string>("Director")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("Movie");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Genre = "Crime, Drama",
                            MediaType = 2,
                            ReleaseYear = 1972,
                            Sinopse = "O patriarca de uma dinastia do crime organizado...",
                            Title = "O Poderoso Chefão",
                            Director = "Francis Ford Coppola"
                        },
                        new
                        {
                            Id = 4,
                            Genre = "Ficção Científica, Aventura",
                            MediaType = 2,
                            ReleaseYear = 2014,
                            Sinopse = "Uma equipe de exploradores viaja através de um buraco...",
                            Title = "Interestelar",
                            Director = "Christopher Nolan"
                        });
                });

            modelBuilder.Entity("MeuTccMvc.Models.Series", b =>
                {
                    b.HasBaseType("MeuTccMvc.Models.MediaItem");

                    b.Property<string>("Director")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("Seasons")
                        .HasColumnType("integer");

                    b.ToTable("MediaItems", t =>
                        {
                            t.Property("Director")
                                .HasColumnName("Series_Director");
                        });

                    b.HasDiscriminator().HasValue("Series");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Genre = "Crime, Drama, Suspense",
                            MediaType = 3,
                            ReleaseYear = 2008,
                            Sinopse = "Um professor de química diagnosticado com câncer...",
                            Title = "Breaking Bad",
                            Director = "Vince Gilligan"
                        },
                        new
                        {
                            Id = 6,
                            Genre = "Comédia",
                            MediaType = 3,
                            ReleaseYear = 2005,
                            Sinopse = "Um documentário sobre o dia a dia cômico...",
                            Title = "The Office (US)",
                            Director = "Greg Daniels"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
